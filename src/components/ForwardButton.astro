---
export interface Props {
	title: string;
	href: string;
	disabled?: boolean;
}

const { href, title, disabled } = Astro.props as Props;
---


<div class={`${disabled ? 'link-card-disabled': 'link-card'}`}>
	<a href={href}>
		<div class="icon">
			<h3>
				{title}
			</h3>
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
			</svg>						
		</div>
	</a>
</div>
<style>

	.link-card {
		display: flex;
        width: fit-content;
		padding: 0.15rem;
        background-color: rgb(91, 171, 202);
		border-radius: 0.5rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.36, 1, 0.22, 1);
	}

	.link-card-disabled {
		display: flex;
        width: fit-content;
		padding: 0.15rem;
        background-color: rgb(198, 198, 198);
		border-radius: 0.5rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.36, 1, 0.22, 1);
	}

	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		border-radius: 0.35rem;
		color: var(--text-color);
		background-color: var(--card-bg);
		opacity: 0.8;
	}

	h3 {
		margin: 0;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}

	h3 span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.link-card:is(:hover, :focus-within) {
		background-position: 0;
	}

	.link-card:is(:hover, :focus-within) h2 {
		color: #4f39fa;
	}

	.link-card:is(:hover, :focus-within) h2 span {
		will-change: transform;
		transform: translateX(2px);
	}

	.icon {
		display: flex;
		flex-direction: row;
		align-items: center;
	}

	.icon > svg {
		padding-left: .5em;
		padding-top: .5em;
		padding-bottom: .5em;
	}

	.icon > h3 {
		padding-right: 1em;
		padding-left: .25em;
	}

	.w-6 {
		width: 1.75em;
	}

	.h-6 {
		height: 1.75em;
	}
</style>
