---
import { Color } from "../enum/Color";

export interface Props {
	title: string;
	body?: string;
	href: string;
	tags: string[];
	color?: string;
	customBg?: string;
}

const { href, title, body, color, customBg, tags } = Astro.props as Props;

const gradientColor = Color[color] || color || Color.purpleBlue;
const displayBody = body ? "block" : "none";
const cardBg = customBg ? customBg : "var(--card-bg)";
---


<div class="link-card">
	<a href={href} target="_blank">
		<h3>
			{title}
			<span>&rarr;</span>
		</h3>
		<div set:html={body}>
		</div>
		<div class="h-list more-space-above">
			{tags.map(function(tag) {
				return <div class="bean">{tag}</div>
			})}
		</div>
	</a>
</div>
<style define:vars={{ gradientColor, displayBody, cardBg }}>

 h3 {
		overflow: visible;
  overflow-wrap: anywhere;
	}

	.bean {
		--labelVPadding: 3px;
		--labelHPadding: 9px;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		vertical-align: top;
		gap: 5px;
		padding: var(--labelVPadding) var(--labelHPadding);
		min-height: 24px;
		max-width: 100%;
		text-align: center;
		background: lightgray;
		color: black;
		white-space: nowrap;
		border-radius: 30px;
	}

	.link-card {
		display: flex;
		padding: 0.15rem;
		background-image: var(--gradientColor);
		background-size: 400%;
		border-radius: 0.5rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1em 1.3em;
		border-radius: 0.35rem;
		color: var(--text-color);
		background-color: var(--cardBg);
		opacity: 0.8;
	}

	h3 {
		margin: 0;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}

	p {
		display: var(--displayBody);
		margin-top: 0.75rem;
		margin-bottom: 0;
	}

	h3 span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.link-card:is(:hover, :focus-within) {
		background-position: 0;
	}

	.link-card:is(:hover, :focus-within) h2 {
		color: #4f39fa;
	}

	.link-card:is(:hover, :focus-within) h2 span {
		will-change: transform;
		transform: translateX(2px);
	}
</style>
