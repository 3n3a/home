---
import BackButton from "../../../components/BackButton.astro";
import Layout from "../../../layouts/Layout.astro";
import { Gallery } from "../../../model/Gallery";
import { Picture } from "../../../model/Picture";
import { getGalleries, getText } from "../../../services/content";

const WEBSITE_MAIN_NAME = await getText('WEBSITE_MAIN_NAME');
const WEBSITE_BACK_BUTTON_TITLE = await getText('WEBSITE_BACK_BUTTON_TITLE');
const GALLERIES_VIEW_WEBSITE_TITLE = await getText('GALLERIES_VIEW_WEBSITE_TITLE');

export async function getStaticPaths({ paginate }) {
	const galleryList: Gallery[] = await getGalleries();
  
  	// Return a paginated collection of paths for all posts
  	return galleryList.map(({title, description, pictures}) => {
		const slug = title.toLowerCase().replaceAll(' ', '_')
		return {
			params: { slug },
			props: { title, description, pictures }
		}
	})
}

const { title, description, pictures } = Astro.props;
---

<Layout title={GALLERIES_VIEW_WEBSITE_TITLE.replaceAll('{title}', title)}>
	<main class="container">
		<div class="spread">
			<h1 class="font-silkscreen">{WEBSITE_MAIN_NAME}</h1>
		</div>

		<BackButton title={WEBSITE_BACK_BUTTON_TITLE} href="/gallery/1" />
		
		<div class="container more-space-above">
			<h2 class="font-style-black larger-font">{title}</h2>
			<p>
				{description}
			</p>
			<div class="images more-space-above">
				{pictures.map(function(data: Picture) {
					return <div class="image-group">
						<a href={'/api/gallery/' + data.image}>
						<img class="image" src={'/api/gallery/' + data.thumb_medium} alt={data.description} loading="lazy" width="720" height="480">
						</a>
						<p>{data.description}</p>
					</div>
				})}
			</div>
		</div>
		
	</main>
</Layout>

<style> 
	h2 {
		margin-top: 1.5em;
	}

	.image {
		max-inline-size: 100%;
		block-size: auto;
		object-fit: contain;
		width: 720px;
		height: 480px;
		background-color: rgba(0, 0, 0, 0.163);
		border-radius: 5px;
	}
	
	.image-group {
		padding: 1rem;
		border: 1px solid black;
		border-radius: 10px;
	}

	.images {
		display: flex;
		gap: 2rem;
		flex-direction: column;
		justify-content: space-between;
		align-items: center;
	}

	.grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		grid-gap: 1rem;
		
	}

	.spread {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
	}
</style>
